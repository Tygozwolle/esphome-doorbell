# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: build doorbell.yaml
        uses: esphome/build-action@v1.8.0
        with:
          yaml_file: doorbell.yaml
          name: "doorbel.bin"
results:
    name: All firmwares compiled
    if: ${{ always() }}
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Check firmware build
        run: |
          result="${{ needs.build.result }}"
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi
    create_release:
      name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      needs: [build]
      runs-on: ubuntu-latest
      permissions:
        contents: write

      steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: firmwares
          path: output

      - name: Zip firmwares
        run: |
          cd output
          zip -r -q firmwares.zip .
          
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            output/**/*.bin
            output/firmwares.zip
